export declare enum ActiveDirectoryNodeKind {
    Entity = "Base",
    User = "User",
    Computer = "Computer",
    Group = "Group",
    GPO = "GPO",
    OU = "OU",
    Container = "Container",
    Domain = "Domain",
    LocalGroup = "ADLocalGroup",
    LocalUser = "ADLocalUser"
}
export declare function ActiveDirectoryNodeKindToDisplay(value: ActiveDirectoryNodeKind): string | undefined;
export declare enum ActiveDirectoryRelationshipKind {
    Owns = "Owns",
    GenericAll = "GenericAll",
    GenericWrite = "GenericWrite",
    WriteOwner = "WriteOwner",
    WriteDACL = "WriteDacl",
    MemberOf = "MemberOf",
    ForceChangePassword = "ForceChangePassword",
    AllExtendedRights = "AllExtendedRights",
    AddMember = "AddMember",
    HasSession = "HasSession",
    Contains = "Contains",
    GPLink = "GPLink",
    AllowedToDelegate = "AllowedToDelegate",
    GetChanges = "GetChanges",
    GetChangesAll = "GetChangesAll",
    GetChangesInFilteredSet = "GetChangesInFilteredSet",
    TrustedBy = "TrustedBy",
    AllowedToAct = "AllowedToAct",
    AdminTo = "AdminTo",
    CanPSRemote = "CanPSRemote",
    CanRDP = "CanRDP",
    ExecuteDCOM = "ExecuteDCOM",
    HasSIDHistory = "HasSIDHistory",
    AddSelf = "AddSelf",
    DCSync = "DCSync",
    ReadLAPSPassword = "ReadLAPSPassword",
    ReadGMSAPassword = "ReadGMSAPassword",
    DumpSMSAPassword = "DumpSMSAPassword",
    SQLAdmin = "SQLAdmin",
    AddAllowedToAct = "AddAllowedToAct",
    WriteSPN = "WriteSPN",
    AddKeyCredentialLink = "AddKeyCredentialLink",
    LocalToComputer = "LocalToComputer",
    MemberOfLocalGroup = "MemberOfLocalGroup",
    RemoteInteractiveLogonPrivilege = "RemoteInteractiveLogonPrivilege",
    SyncLAPSPassword = "SyncLAPSPassword",
    WriteAccountRestrictions = "WriteAccountRestrictions"
}
export declare function ActiveDirectoryRelationshipKindToDisplay(value: ActiveDirectoryRelationshipKind): string | undefined;
export type ActiveDirectoryKind = ActiveDirectoryNodeKind | ActiveDirectoryRelationshipKind;
export declare enum ActiveDirectoryKindProperties {
    AdminCount = "admincount",
    DistinguishedName = "distinguishedname",
    DomainFQDN = "domain",
    DomainSID = "domainsid",
    Sensitive = "sensitive",
    HighValue = "highvalue",
    BlocksInheritance = "blocksinheritance",
    IsACL = "isacl",
    IsACLProtected = "isaclprotected",
    Enforced = "enforced",
    Department = "department",
    HasSPN = "hasspn",
    UnconstrainedDelegation = "unconstraineddelegation",
    LastLogon = "lastlogon",
    LastLogonTimestamp = "lastlogontimestamp",
    IsPrimaryGroup = "isprimarygroup",
    HasLAPS = "haslaps",
    DontRequirePreAuth = "dontreqpreauth",
    LogonType = "logontype",
    HasURA = "hasura",
    PasswordNeverExpires = "pwdneverexpires",
    PasswordNotRequired = "passwordnotreqd",
    FunctionalLevel = "functionallevel",
    TrustType = "trusttype",
    SidFiltering = "sidfiltering",
    TrustedToAuth = "trustedtoauth",
    SamAccountName = "samaccountname"
}
export declare function ActiveDirectoryKindPropertiesToDisplay(value: ActiveDirectoryKindProperties): string | undefined;
export declare function ActiveDirectoryPathfindingEdges(): ActiveDirectoryRelationshipKind[];
export declare enum AzureNodeKind {
    Entity = "AZBase",
    VMScaleSet = "AZVMScaleSet",
    App = "AZApp",
    Role = "AZRole",
    Device = "AZDevice",
    FunctionApp = "AZFunctionApp",
    Group = "AZGroup",
    KeyVault = "AZKeyVault",
    ManagementGroup = "AZManagementGroup",
    ResourceGroup = "AZResourceGroup",
    ServicePrincipal = "AZServicePrincipal",
    Subscription = "AZSubscription",
    Tenant = "AZTenant",
    User = "AZUser",
    VM = "AZVM",
    ManagedCluster = "AZManagedCluster",
    ContainerRegistry = "AZContainerRegistry",
    WebApp = "AZWebApp",
    LogicApp = "AZLogicApp",
    AutomationAccount = "AZAutomationAccount"
}
export declare function AzureNodeKindToDisplay(value: AzureNodeKind): string | undefined;
export declare enum AzureRelationshipKind {
    AvereContributor = "AZAvereContributor",
    Contains = "AZContains",
    Contributor = "AZContributor",
    GetCertificates = "AZGetCertificates",
    GetKeys = "AZGetKeys",
    GetSecrets = "AZGetSecrets",
    HasRole = "AZHasRole",
    MemberOf = "AZMemberOf",
    Owner = "AZOwner",
    RunsAs = "AZRunsAs",
    VMContributor = "AZVMContributor",
    AutomationContributor = "AZAutomationContributor",
    KeyVaultContributor = "AZKeyVaultContributor",
    VMAdminLogin = "AZVMAdminLogin",
    AddMembers = "AZAddMembers",
    AddSecret = "AZAddSecret",
    ExecuteCommand = "AZExecuteCommand",
    GlobalAdmin = "AZGlobalAdmin",
    PrivilegedAuthAdmin = "AZPrivilegedAuthAdmin",
    Grant = "AZGrant",
    GrantSelf = "AZGrantSelf",
    PrivilegedRoleAdmin = "AZPrivilegedRoleAdmin",
    ResetPassword = "AZResetPassword",
    UserAccessAdministrator = "AZUserAccessAdministrator",
    Owns = "AZOwns",
    ScopedTo = "AZScopedTo",
    CloudAppAdmin = "AZCloudAppAdmin",
    AppAdmin = "AZAppAdmin",
    AddOwner = "AZAddOwner",
    ManagedIdentity = "AZManagedIdentity",
    ApplicationReadWriteAll = "AZMGApplication_ReadWrite_All",
    AppRoleAssignmentReadWriteAll = "AZMGAppRoleAssignment_ReadWrite_All",
    DirectoryReadWriteAll = "AZMGDirectory_ReadWrite_All",
    GroupReadWriteAll = "AZMGGroup_ReadWrite_All",
    GroupMemberReadWriteAll = "AZMGGroupMember_ReadWrite_All",
    RoleManagementReadWriteDirectory = "AZMGRoleManagement_ReadWrite_Directory",
    ServicePrincipalEndpointReadWriteAll = "AZMGServicePrincipalEndpoint_ReadWrite_All",
    AKSContributor = "AZAKSContributor",
    NodeResourceGroup = "AZNodeResourceGroup",
    WebsiteContributor = "AZWebsiteContributor",
    LogicAppContributor = "AZLogicAppContributor",
    AZMGAddMember = "AZMGAddMember",
    AZMGAddOwner = "AZMGAddOwner",
    AZMGAddSecret = "AZMGAddSecret",
    AZMGGrantAppRoles = "AZMGGrantAppRoles",
    AZMGGrantRole = "AZMGGrantRole"
}
export declare function AzureRelationshipKindToDisplay(value: AzureRelationshipKind): string | undefined;
export type AzureKind = AzureNodeKind | AzureRelationshipKind;
export declare enum AzureKindProperties {
    AppOwnerOrganizationID = "appownerorganizationid",
    AppDescription = "appdescription",
    AppDisplayName = "appdisplayname",
    ServicePrincipalType = "serviceprincipaltype",
    UserType = "usertype",
    TenantID = "tenantid",
    ServicePrincipalID = "service_principal_id",
    ServicePrincipalNames = "service_principal_names",
    OperatingSystemVersion = "operatingsystemversion",
    TrustType = "trustype",
    IsBuiltIn = "isbuiltin",
    AppID = "appid",
    AppRoleID = "approleid",
    DeviceID = "deviceid",
    NodeResourceGroupID = "noderesourcegroupid",
    OnPremID = "onpremid",
    OnPremSyncEnabled = "onpremsyncenabled",
    SecurityEnabled = "securityenabled",
    SecurityIdentifier = "securityidentifier",
    EnableRBACAuthorization = "enablerbacauthorization",
    Scope = "scope",
    Offer = "offer",
    MFAEnabled = "mfaenabled",
    License = "license",
    Licenses = "licenses",
    MFAEnforced = "mfaenforced",
    UserPrincipalName = "userprincipalname",
    IsAssignableToRole = "isassignabletorole",
    PublisherDomain = "publisherdomain",
    SignInAudience = "signinaudience",
    RoleTemplateID = "templateid"
}
export declare function AzureKindPropertiesToDisplay(value: AzureKindProperties): string | undefined;
export declare function AzurePathfindingEdges(): AzureRelationshipKind[];
export declare enum CommonNodeKind {
    MigrationData = "MigrationData"
}
export declare function CommonNodeKindToDisplay(value: CommonNodeKind): string | undefined;
export declare enum CommonKindProperties {
    ObjectID = "objectid",
    Name = "name",
    DisplayName = "displayname",
    Description = "description",
    OwnerObjectID = "owner_objectid",
    Collected = "collected",
    OperatingSystem = "operatingsystem",
    SystemTags = "system_tags",
    UserTags = "user_tags",
    LastSeen = "lastseen",
    WhenCreated = "whencreated",
    Enabled = "enabled",
    PasswordLastSet = "pwdlastset",
    Title = "title",
    Email = "email",
    IsInherited = "isinherited"
}
export declare function CommonKindPropertiesToDisplay(value: CommonKindProperties): string | undefined;
